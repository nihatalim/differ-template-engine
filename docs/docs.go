// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/users/{userId}/templates": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "controller"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "userId",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Template"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "controller"
                ],
                "parameters": [
                    {
                        "description": "CreateTemplateRequest",
                        "name": "requestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateTemplateRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "userId",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/domain.Template"
                        }
                    }
                }
            }
        },
        "/users/{userId}/templates/{templateId}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "controller"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "userId",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "templateId",
                        "name": "templateId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.Header": {
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/definitions/domain.HeaderType"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "domain.HeaderType": {
            "type": "string",
            "enum": [
                "static",
                "dynamic"
            ],
            "x-enum-varnames": [
                "StaticHeaderType",
                "DynamicHeaderType"
            ]
        },
        "domain.Headers": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/domain.Header"
            }
        },
        "domain.Method": {
            "type": "string",
            "enum": [
                "GET"
            ],
            "x-enum-varnames": [
                "MethodGet"
            ]
        },
        "domain.Template": {
            "type": "object",
            "properties": {
                "content": {
                    "$ref": "#/definitions/domain.TemplateContent"
                },
                "created_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "domain.TemplateContent": {
            "type": "object",
            "properties": {
                "headers": {
                    "$ref": "#/definitions/domain.Headers"
                },
                "method": {
                    "$ref": "#/definitions/domain.Method"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "request.CreateTemplateRequest": {
            "type": "object",
            "properties": {
                "headers": {
                    "$ref": "#/definitions/domain.Headers"
                },
                "method": {
                    "$ref": "#/definitions/domain.Method"
                },
                "name": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
